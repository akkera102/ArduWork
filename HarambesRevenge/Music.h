#ifndef MUSIC_H
#define MUSIC_H

#include <ArduboyTones.h>


const uint16_t mainTheme[] PROGMEM = {
  NOTE_E4,250,NOTE_REST,50,NOTE_G4,150,
  NOTE_B5,250,NOTE_REST,50,NOTE_D5,150,
  NOTE_C4,250,NOTE_REST,50,NOTE_DS4,150,NOTE_G4,150,NOTE_AS4,150,
  NOTE_G4,250,NOTE_REST,50,NOTE_DS5,150,NOTE_C5,300,
  TONES_END
};

const uint16_t story[] PROGMEM = {
  NOTE_E2,200,NOTE_REST,100,
  NOTE_G4,100,NOTE_REST,200,NOTE_B4,100,NOTE_REST,200,
  
  NOTE_E2,200,NOTE_REST,100,
  NOTE_B4,200,NOTE_REST,100,NOTE_G4,100,NOTE_REST,200,
  
  NOTE_E2,100,NOTE_REST,50,NOTE_E2,100,NOTE_REST,50, 
  NOTE_E2,100,NOTE_REST,50,NOTE_E4,50,NOTE_REST,100,
  NOTE_E2,100,NOTE_REST,50,NOTE_E2,100,NOTE_REST,50,
  
  NOTE_E2,200,NOTE_REST,100,
  NOTE_G4,100,NOTE_REST,200,NOTE_B4,100,NOTE_REST,200,

  NOTE_C3,200,NOTE_REST,100,
  NOTE_E4,100,NOTE_REST,200,NOTE_AS4,100,NOTE_REST,200,
  
  NOTE_C3,200,NOTE_REST,100,
  NOTE_E4,100,NOTE_REST,200,NOTE_AS4,100,NOTE_REST,200,

  NOTE_C2,100,NOTE_REST,50,NOTE_C2,100,NOTE_REST,50, 
  NOTE_C2,100,NOTE_REST,50,NOTE_C4,50,NOTE_REST,100,
  NOTE_C2,100,NOTE_REST,50,NOTE_C2,100,NOTE_REST,50,

  NOTE_C3,200,NOTE_REST,100,
  NOTE_E4,100,NOTE_REST,200,NOTE_AS4,100,NOTE_REST,200,
  TONES_REPEAT,
};

const uint16_t gameOver[] PROGMEM = {
  NOTE_A4,150,NOTE_B4,150,NOTE_C5,150,NOTE_A4,150,
  NOTE_E5,300,NOTE_G5,150,NOTE_A5,150,
  TONES_END
};

const uint16_t transform[] PROGMEM = {
  NOTE_AS5,50,NOTE_D5,50,NOTE_AS6,50,
  TONES_END
};

const uint16_t oneUp[] PROGMEM = {
  NOTE_C5,75,NOTE_E5,75,NOTE_G5,75,NOTE_E5,75,NOTE_G5,75,NOTE_C6,75,
  TONES_END
};

const uint16_t snakeShot[] PROGMEM = {
  NOTE_B7,25,NOTE_DS6,25,NOTE_CS6,50,
  NOTE_B6,25,NOTE_DS5,25,NOTE_CS5,50,
  NOTE_B5,25,NOTE_DS4,25,NOTE_CS4,50,
  TONES_END,
};



const uint16_t exitStage[] PROGMEM = {
  NOTE_AS5,150,NOTE_D5,150,NOTE_C7,150,
  NOTE_F6,150,NOTE_AS5,150,
  TONES_END
};

const uint16_t bulletFire[] PROGMEM = {
  NOTE_C3,25,NOTE_D3,25,NOTE_E4,25,
  TONES_END
};

const uint16_t harambeShot[] PROGMEM = {
  NOTE_AS6,25,NOTE_D5,25,NOTE_C5,50,
  NOTE_AS5,25,NOTE_D4,25,NOTE_C4,50,
  NOTE_AS4,25,NOTE_D3,25,NOTE_C3,50,
  NOTE_AS2,50,NOTE_AS1,50,
  TONES_END
};

const uint16_t dashSfx[] PROGMEM = {
  NOTE_C2,50,NOTE_C3,50,NOTE_C4,50,NOTE_C5,50,NOTE_C6,50,NOTE_C5,50,NOTE_C6,50,NOTE_C7,50,NOTE_C8,50,NOTE_C7,50,NOTE_C8,50,NOTE_C7,25,NOTE_C6,25,NOTE_C5,25,NOTE_C4,25,NOTE_C3,25,
  TONES_END
};


const uint16_t tankFire[] PROGMEM = {
  NOTE_C7,25,NOTE_B6,25,NOTE_AS6,25,NOTE_A6,25,NOTE_GS6,25,NOTE_G6,25,NOTE_FS6,25,NOTE_F6,25,NOTE_E6,25,NOTE_DS6,25,NOTE_D6,25,NOTE_C2,100,
  TONES_END
};


const uint8_t harambeDash[] PROGMEM ={
0x34, 0x40, 0x29, 0x02, 0x8d, 0xf9, 0x25, 0x3c, 0x26, 0x02, 0x96, 0xf7, 0x30, 0x40, 0x29, 0x12,
0x97, 0xf7, 0x2f, 0x47, 0x29, 0x09, 0x9c, 0xed, 0x2b, 0x42, 0x05, 0x15, 0x9d, 0xed, 0x2d, 0x3d,
0x28, 0x13, 0x9d, 0xea, 0x1d, 0x42, 0x29, 0x0d, 0x9a, 0xf1, 0x1e, 0x4a, 0x2a, 0x10, 0x9c, 0xef,
0x2a, 0x3c, 0x13, 0x17, 0x9a, 0xfb, 0x39, 0x39, 0x06, 0x0d, 0x9c, 0xf4, 0x38, 0x3b, 0x29, 0x0b,
0x9a, 0x7e, 0x48, 0x36, 0x29, 0x18, 0x94, 0x74, 0x43, 0x40, 0x33, 0x04, 0x91, 0x57, 0x38, 0x4e,
0x29, 0x01, 0x91, 0x4a, 0x46, 0x49, 0x29, 0x01, 0x8f, 0x48, 0x43, 0x4b, 0x29, 0x01, 0x8e, 0x49,
0x43, 0x4a, 0x01, 0x00, 0x50, 0x10, 0x27, 0x3b, 0x02, 0x45, 0x11, 0x60, 0x20, 0x67, 0x24, 0xff,
0x1c, 0x5a, 0x1f, 0x50, 0x29, 0xff, 0x16, 0x5d, 0x12, 0x6a, 0x29, 0xff, 0x14, 0x60, 0x11, 0x6a,
0x29, 0xff, 0x14, 0x60, 0x11, 0x6a, 0x29, 0xea, 0x11, 0x62, 0x0e, 0x68, 0x29, 0xab, 0x13, 0x5a,
0x10, 0x63, 0x29, 0xab, 0x1c, 0x4e, 0x1a, 0x5a, 0x1c, 0x3b, 0x1b, 0x52, 0x17, 0x58, 0x14, 0x10,
0x14, 0x61, 0x1f, 0x39, 0x29, 0x0f, 0x09, 0x64, 0x17, 0x42, 0x29, 0xff, 0x86, 0xfc, 0x0b, 0x59,
0x13, 0xb8, 0x8b, 0xee, 0x02, 0x64, 0x29, 0xbe, 0x8d, 0xec, 0x80, 0x65, 0x29, 0xa7, 0x8d, 0xec,
0x81, 0x65, 0x29, 0xa6, 0x8c, 0xec, 0x80, 0x66, 0x00, 0x00, 0x48, 0x0e, 0x31, 0x3d, 0x80, 0x0c,
0x3a, 0x66, 0x1f, 0x53, 0x80, 0x15, 0x42, 0x5c, 0x24, 0x4c, 0x80, 0x11, 0x4a, 0x5a, 0x26, 0x46,
0x80, 0x0c, 0x3d, 0x58, 0x1e, 0x4d, 0x80, 0x09, 0x42, 0x5c, 0x27, 0x51, 0x80, 0x06, 0x48, 0x59,
0x26, 0x49, 0x80, 0x04, 0x3d, 0x5c, 0x23, 0x52, 0x80, 0x02, 0x44, 0x5a, 0x24, 0x4b, 0x80, 0x02,
0x42, 0x5a, 0x23, 0x45, 0x80, 0x00, 0x39, 0x61, 0x21, 0x55, 0x80, 0x00, 0x3e, 0x5d, 0x23, 0x4d,
0x2a, 0x00, 0x44, 0x5d, 0x2b, 0x50, 0x2a, 0x00, 0x40, 0x58, 0x27, 0x4b, 0x17, 0x00, 0x35, 0x53,
0x1f, 0x4f, 0x2a, 0x00, 0x3d, 0x49, 0x2a, 0x41, 0x30, 0x00, 0x43, 0x45, 0x37, 0x39, 0x80, 0x00,
0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
};


#endif //MUSIC_H
